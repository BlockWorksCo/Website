<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Error Handling on BlockWorks Co</title>
    <link>http://BlockWorks.co/tags/error-handling/</link>
    <description>Recent content in Error Handling on BlockWorks Co</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 20 Jan 2019 19:14:13 +0000</lastBuildDate>
    
	<atom:link href="http://BlockWorks.co/tags/error-handling/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Accidental Corruption</title>
      <link>http://BlockWorks.co/posts/accidentalcorruption/</link>
      <pubDate>Sun, 20 Jan 2019 19:14:13 +0000</pubDate>
      
      <guid>http://BlockWorks.co/posts/accidentalcorruption/</guid>
      <description>Accidental corruption. Considering your typical C and microcontroller based embedded application, corruption can be caused in many ways.
Regardless of the root-cause, if corruption is detected, the only course of action is an immediate PANIC situation. Why do we PANIC? because we cannot now trust the machine state. At the point of detection we cannot know what else has been affected and for how long, therfore the only safe thing to do is PANIC our way back to safety.</description>
    </item>
    
    <item>
      <title>Error handling for embedded systems</title>
      <link>http://BlockWorks.co/posts/errorhandling/</link>
      <pubDate>Sun, 20 Jan 2019 19:14:13 +0000</pubDate>
      
      <guid>http://BlockWorks.co/posts/errorhandling/</guid>
      <description>Error Handling and recovery. This is an important subject for any software system. No one ever intentionally designs their software to be unreliable or insecure but it does happen, despite our best intentions. Therefore we must think carefully about how we design in the ability to fail.
First and foremost, we must acknowledge that our one subsystem is not isolated. It exists within an ecosystem. This larger connected system must be taken into account when considering failures.</description>
    </item>
    
  </channel>
</rss>